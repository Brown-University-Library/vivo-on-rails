<% @page_title = (@presenter.organization.name || "") + " Publication Timeline"%>

<%= render "visualization/viz_style" %>
<%= render "visualization/viz_javascript" %>
<%= render "search_box" %>

<h1 class="researcherName"><%= @presenter.organization.name %></h1>

<div class="row">
  <div class="col-md-9">
    <div id="descriptionMsg">
      The publication history visualization is created with the information provided by each
      researcher associated with this organization. You can view the individual
      publications for each researcher under the Publications tab.
    </div>
    <div id="errorMsg" class="alert alert-danger hidden" role="alert">
      <span class="glyphicon glyphicon-exclamation-sign" aria-hidden="true"></span>
      <span class="sr-only">Error:</span>
      No publication data is available for this organization.
    </div>
    <div class="btn-group btn-group" role="group" aria-label="...">
      <div class="btn-group" role="group">
        <button id="showLast10" type="button" class="btn btn-info" title="Show data for the last 10 years">Last 10 years</button>
      </div>
      <div class="btn-group" role="group">
        <button id="showAll" type="button" class="btn btn-default" title="Show all data for this department">All history</button>
      </div>
    </div>
    <div id="loadingMsg">
      <button class="btn btn-lg btn-warning"><span class="glyphicon glyphicon-refresh glyphicon-refresh-animate"></span> Loading visualization...</button>
    </div>
    <svg id="svgElement" width="960" height="700" xmlns="http://www.w3.org/2000/svg"></svg>
  </div>
  <div class="col-md-3">
    <a class="btn btn-default btn-lg" role="button" href="<%= visualization_collab_path(@presenter.organization.vivo_id) %>" >Collaboration Network</a>
    <a class="btn btn-primary btn-lg" role="button" href="<%= visualization_publications_path(@presenter.organization.vivo_id) %>" >Publication History</a>
    <p>&nbsp;</p>
    <div id="legend">
    <p><b>Legend</b></p>
    <ul id="legendList" class="legend">
      <!-- added via JavaScript -->
    </ul>
    </div>
    <p><b>Options</b></p>
    <p><a href="<%= display_show_path(@presenter.organization.vivo_id) %>">View Organization's Profile</a></p>
    <p><a href="<%= visualization_publications_path(@presenter.organization.vivo_id, format: :csv) %>"
      title="Format suitable for Excel and other tools."
      target="_blank">Download data (CSV)</a></p>
    <p><a href="<%= visualization_publications_path(@presenter.organization.vivo_id, format: :json) %>"
      title="Format suitable for D3 and other visualization tools."
      target="_blank">Download data (JSON)</a></p>
    <p><a href="#" id="embedHtml" title="Shows HTML to embed the graph as an SVG element into your own page.">Embed SVG Code</a></p>
    <p><a href="#" id="downloadPng" title="Downlods the graph as an image file in PNG format. This only works in Chrome and Firefox.">Download Image (PNG)</a></p>
  </div>
</div>

<div class="row hidden" id="canvasDiv">
  <canvas id="canvasElement"></canvas>
  <a id="canvasImgLink" href="#" download="collaborators.png" target="_blank"></a>
</div>

<div class="row hidden" id="embedHtmlDiv">
  <div class="col-md-12">
    <p>Copy the following HTML to embed the SVG into your own page</p>
    <textarea id="embedHtmlText" rows="15" class="htmlSnippet"></textarea>
  </div>
  <div><p>&nbsp;</p></div>
</div>

<div id="tooltip" class="hidden">
  <p id="title" style="margin:0;"></p>
  <p id="subtitle" style="margin:0;"></p>
  <p id="subtitle2" style="margin:0;"></p>
</div>

<script>

  var facultyId = "<%= @presenter.organization.id %>";     // http://vivo.brown.edu/jcarberry
  var vivoId = "<%= @presenter.organization.vivo_id %>";   // jcarberry
  var jsonDataUrl = "<%= visualization_publications_path(@presenter.organization.vivo_id, format: :json) %>";
  var researcherUrl = "<%= display_show_path('placeholder') %>";
  var svgWidth = 960;
  var svgHeight = 700;
  var theData = null;
  var showLast10 = true;

  $(document).ready(function() {

    $.getJSON(jsonDataUrl, function(data, status) {
      theData = data; // save the data in our global variable
      drawGraph();
    });

    $("#showLast10").on("click", function() { showLast10 = true; drawGraph(); return false; });
    $("#showAll").on("click", function() { showLast10 = false; drawGraph(); return false;});

    $("#embedHtml").on("click", function() {
      showEmbedHtml("svgElement", svgWidth, svgHeight, "embedHtmlDiv", "embedHtmlText");
    });

    $("#downloadPng").on("click", function() {
      downloadPng("svgElement", svgWidth, svgHeight,
        "canvasElement", "canvasImgLink", "collabs_" + vivoId + ".png");
    });
  });

  function updateLabels() {
    var showLabels = $("#showLabels").is(":checked");
    if (showLabels) {
      d3.selectAll(".node-text").classed("hidden",false);
    } else {
      d3.selectAll(".node-text").classed("hidden",true);
    }
  }

  function drawGraph() {
    var data = theData;
    $("#loadingMsg").addClass("hidden");

    // if (data.links === undefined || data.links.length == 0) {
    //   $("#errorMsg").removeClass("hidden");
    // }

    var i;
    var svg = d3.select("svg");

    var margin = {top: 20, right: 20, bottom: 30, left: 50};
    var w = +svg.attr("width") - margin.left - margin.right;
    var h = +svg.attr("height") - margin.top - margin.bottom;

    var g = svg.append("g").attr("transform", "translate(" + margin.left + "," + margin.top + ")");
    var parseTime = d3.timeParse("%d-%b-%y");
    var x = d3.scaleLinear().rangeRound([0, w]);
    var y = d3.scaleLinear().rangeRound([h, 0]);

    var line = d3.line()
        .x(function(d) { return x(d.year); })
        .y(function(d) { return y(d.count); });



    var svg = d3.select("svg");
    svg.selectAll("*").remove();

    var margin = {top: 20, right: 20, bottom: 30, left: 40},
        width = +svg.attr("width") - margin.left - margin.right,
        height = +svg.attr("height") - margin.top - margin.bottom,
        g = svg.append("g").attr("transform", "translate(" + margin.left + "," + margin.top + ")");

    var x = d3.scaleBand()
        .rangeRound([0, width])
        .paddingInner(0.05)
        .align(0.1);

    var y = d3.scaleLinear()
        .rangeRound([height, 0]);

    var colorScheme = d3.scaleOrdinal(d3.schemeCategory20);

    var years;
    if (showLast10) {
      data = theData.matrix.slice(-10);
      years = theData.years.slice(-10);
      $("#showLast10").addClass("btn-info");
      $("#showLast10").removeClass("btn-default");
      $("#showAll").addClass("btn-default");
      $("#showAll").removeClass("btn-info");
    } else {
      data = theData.matrix;
      years = theData.years;
      $("#showLast10").addClass("btn-default");
      $("#showLast10").removeClass("btn-info");
      $("#showAll").addClass("btn-info");
      $("#showAll").removeClass("btn-default");
    }
    keys = theData.columns;

    x.domain(years);
    y.domain([0, d3.max(data, function(d) { return d.total; })]).nice();

    g.append("g")
      .selectAll("g")
      .data(d3.stack().keys(keys)(data))
      .enter().append("g")
        .attr("fill", function(d) { return colorScheme(d.key); })
      .selectAll("rect")
      .data(function(d) { return d; })
      .enter().append("rect")
        .attr("x", function(d) { return x(d.data.year); })
        .attr("y", function(d) { return y(d[1]); })
        .attr("height", function(d) { return y(d[0]) - y(d[1]); })
        .attr("width", x.bandwidth());

    g.append("g")
        .attr("class", "axis")
        .attr("transform", "translate(0," + height + ")")
        .call(d3.axisBottom(x));

    g.append("g")
        .attr("class", "axis")
        .call(d3.axisLeft(y).ticks(null, "s"))
      .append("text")
        .attr("x", 2)
        .attr("y", y(y.ticks().pop()) + 0.5)
        .attr("dy", "0.32em")
        .attr("fill", "#000")
        .attr("font-weight", "bold")
        .attr("text-anchor", "start")
        .text("Publications");

    var ul = $("#legendList");
    ul.empty();
    var column;
    for(i = 0; i < theData.columns.length; i++) {
      column = theData.columns[i];
      ul.append('<li><span style="background-color: ' + colorScheme(column) + ';">&nbsp;&nbsp;&nbsp;&nbsp;</span>&nbsp;' + column);
    }

    updateLabels();
  } // function drawGraph() {

</script>
